initSidebarItems({"constant":[["ENCODING",""],["LONG_NAME",""],["NAME",""]],"fn":[["avl_is_disabled","Returns whether “Available for use by system software” is currently disabled."],["avl_is_disabled_in_value","Returns whether “Available for use by system software” is disabled in the given register value."],["avl_is_enabled","Returns whether “Available for use by system software” is currently enabled."],["avl_is_enabled_in_value","Returns whether “Available for use by system software” is enabled in the given register value."],["d_b_is_disabled","Returns whether “Default operation size (0 = 16-bit segment; 1 = 32-bitsegment)” is currently disabled."],["d_b_is_disabled_in_value","Returns whether “Default operation size (0 = 16-bit segment; 1 = 32-bitsegment)” is disabled in the given register value."],["d_b_is_enabled","Returns whether “Default operation size (0 = 16-bit segment; 1 = 32-bitsegment)” is currently enabled."],["d_b_is_enabled_in_value","Returns whether “Default operation size (0 = 16-bit segment; 1 = 32-bitsegment)” is enabled in the given register value."],["disable_avl","Disables “Available for use by system software”."],["disable_avl_in_value","Disables “Available for use by system software” in the given register value, returning the new value."],["disable_d_b","Disables “Default operation size (0 = 16-bit segment; 1 = 32-bitsegment)”."],["disable_d_b_in_value","Disables “Default operation size (0 = 16-bit segment; 1 = 32-bitsegment)” in the given register value, returning the new value."],["disable_g","Disables “Granularity”."],["disable_g_in_value","Disables “Granularity” in the given register value, returning the new value."],["disable_p","Disables “Segment present”."],["disable_p_in_value","Disables “Segment present” in the given register value, returning the new value."],["disable_s","Disables “S — Descriptor type (0 = system; 1 = code or data)”."],["disable_s_in_value","Disables “S — Descriptor type (0 = system; 1 = code or data)” in the given register value, returning the new value."],["disable_segment_unusable","Disables “Segment unusable (0 = usable; 1 = unusable)”."],["disable_segment_unusable_in_value","Disables “Segment unusable (0 = usable; 1 = unusable)” in the given register value, returning the new value."],["enable_avl","Enables “Available for use by system software”."],["enable_avl_in_value","Enables “Available for use by system software” in the given register value, returning the new value."],["enable_d_b","Enables “Default operation size (0 = 16-bit segment; 1 = 32-bitsegment)”."],["enable_d_b_in_value","Enables “Default operation size (0 = 16-bit segment; 1 = 32-bitsegment)” in the given register value, returning the new value."],["enable_g","Enables “Granularity”."],["enable_g_in_value","Enables “Granularity” in the given register value, returning the new value."],["enable_p","Enables “Segment present”."],["enable_p_in_value","Enables “Segment present” in the given register value, returning the new value."],["enable_s","Enables “S — Descriptor type (0 = system; 1 = code or data)”."],["enable_s_in_value","Enables “S — Descriptor type (0 = system; 1 = code or data)” in the given register value, returning the new value."],["enable_segment_unusable","Enables “Segment unusable (0 = usable; 1 = unusable)”."],["enable_segment_unusable_in_value","Enables “Segment unusable (0 = usable; 1 = unusable)” in the given register value, returning the new value."],["g_is_disabled","Returns whether “Granularity” is currently disabled."],["g_is_disabled_in_value","Returns whether “Granularity” is disabled in the given register value."],["g_is_enabled","Returns whether “Granularity” is currently enabled."],["g_is_enabled_in_value","Returns whether “Granularity” is enabled in the given register value."],["get","Returns the current value of the register."],["get_dpl","Returns the current value of “Descriptor privilege level”."],["get_dpl_from_value","Returns the value of “Descriptor privilege level” in the given register value."],["get_segment_type","Returns the current value of “Segment type”."],["get_segment_type_from_value","Returns the value of “Segment type” in the given register value."],["p_is_disabled","Returns whether “Segment present” is currently disabled."],["p_is_disabled_in_value","Returns whether “Segment present” is disabled in the given register value."],["p_is_enabled","Returns whether “Segment present” is currently enabled."],["p_is_enabled_in_value","Returns whether “Segment present” is enabled in the given register value."],["s_is_disabled","Returns whether “S — Descriptor type (0 = system; 1 = code or data)” is currently disabled."],["s_is_disabled_in_value","Returns whether “S — Descriptor type (0 = system; 1 = code or data)” is disabled in the given register value."],["s_is_enabled","Returns whether “S — Descriptor type (0 = system; 1 = code or data)” is currently enabled."],["s_is_enabled_in_value","Returns whether “S — Descriptor type (0 = system; 1 = code or data)” is enabled in the given register value."],["segment_unusable_is_disabled","Returns whether “Segment unusable (0 = usable; 1 = unusable)” is currently disabled."],["segment_unusable_is_disabled_in_value","Returns whether “Segment unusable (0 = usable; 1 = unusable)” is disabled in the given register value."],["segment_unusable_is_enabled","Returns whether “Segment unusable (0 = usable; 1 = unusable)” is currently enabled."],["segment_unusable_is_enabled_in_value","Returns whether “Segment unusable (0 = usable; 1 = unusable)” is enabled in the given register value."],["set","Sets the value of the register."],["set_dpl","Sets the value of “Descriptor privilege level”."],["set_dpl_in_value","Sets the value of “Descriptor privilege level” in the given register value, returning the new value."],["set_segment_type","Sets the value of “Segment type”."],["set_segment_type_in_value","Sets the value of “Segment type” in the given register value, returning the new value."]]});